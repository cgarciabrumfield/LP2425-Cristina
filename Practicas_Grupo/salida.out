Grammar:

Rule 0     S' -> expression
Rule 1     expression -> { expressions }
Rule 2     expression -> NEW TYPEID
Rule 3     expression -> CASE expression OF casos ; ESAC
Rule 4     expression -> LET variables IN expressions
Rule 5     expression -> WHILE expression LOOP expression POOL
Rule 6     expression -> IF expression THEN expression ELSE expression FI
Rule 7     expression -> OBJECTID ( expressions )
Rule 8     expression -> OBJECTID ( )
Rule 9     expression -> expression . OBJECTID ( expressions )
Rule 10    expression -> expression . OBJECTID ( )
Rule 11    expression -> expression @ TYPEID . OBJECTID ( expressions )
Rule 12    expression -> expression @ TYPEID . OBJECTID ( )
Rule 13    expression -> ~ expression )
Rule 14    expression -> ISVOID expression )
Rule 15    expression -> NOT expression )
Rule 16    expression -> ( expression )
Rule 17    expression -> expression = expression
Rule 18    expression -> expression <= expression
Rule 19    expression -> expression < expression
Rule 20    expression -> expression / expression
Rule 21    expression -> expression * expression
Rule 22    expression -> expression - expression
Rule 23    expression -> expression + expression
Rule 24    expression -> OBJECTID ASSIGN expression
Rule 25    asignacion -> ASSIGN expression
Rule 26    variable -> OBJECTID : TYPEID asignacion
Rule 27    variable -> OBJECTID : TYPEID
Rule 28    variables -> variable ,
Rule 29    variables -> variables OBJECTID : TYPEID asignacion
Rule 30    variables -> variables OBJECTID : TYPEID
Rule 31    casos -> casos OBJECTID : TYPEID DARROW expression
Rule 32    casos -> OBJECTID : TYPEID DARROW expression
Rule 33    expressions -> expressions expression ;
Rule 34    expressions -> expression ;

Unused terminals:

    INT_CONST
    BOOL_CONST
    LE
    CLASS
    STR_CONST
    INHERITS

Terminals, with rules where they appear:

(                    : 7 8 9 10 11 12 16
)                    : 7 8 9 10 11 12 13 14 15 16
*                    : 21
+                    : 23
,                    : 28
-                    : 22
.                    : 9 10 11 12
/                    : 20
:                    : 26 27 29 30 31 32
;                    : 3 33 34
<                    : 19
<=                   : 18
=                    : 17
@                    : 11 12
ASSIGN               : 24 25
BOOL_CONST           : 
CASE                 : 3
CLASS                : 
DARROW               : 31 32
ELSE                 : 6
ESAC                 : 3
FI                   : 6
IF                   : 6
IN                   : 4
INHERITS             : 
INT_CONST            : 
ISVOID               : 14
LE                   : 
LET                  : 4
LOOP                 : 5
NEW                  : 2
NOT                  : 15
OBJECTID             : 7 8 9 10 11 12 24 26 27 29 30 31 32
OF                   : 3
POOL                 : 5
STR_CONST            : 
THEN                 : 6
TYPEID               : 2 11 12 26 27 29 30 31 32
WHILE                : 5
error                : 
{                    : 1
}                    : 1
~                    : 13

Nonterminals, with rules where they appear:

asignacion           : 26 29
casos                : 3 31
expression           : 3 5 5 6 6 6 9 10 11 12 13 14 15 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 25 31 32 33 34 0
expressions          : 1 4 7 9 11 33
variable             : 28
variables            : 4 29 30


state 0

    (0) S' -> . expression
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 2

    (1) expression -> { . expressions }
    (33) expressions -> . expressions expression ;
    (34) expressions -> . expression ;
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expressions                    shift and go to state 22
    expression                     shift and go to state 23

state 3

    (2) expression -> NEW . TYPEID
    TYPEID          shift and go to state 24


state 4

    (3) expression -> CASE . expression OF casos ; ESAC
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 25

state 5

    (4) expression -> LET . variables IN expressions
    (28) variables -> . variable ,
    (29) variables -> . variables OBJECTID : TYPEID asignacion
    (30) variables -> . variables OBJECTID : TYPEID
    (26) variable -> . OBJECTID : TYPEID asignacion
    (27) variable -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 28

    variables                      shift and go to state 26
    variable                       shift and go to state 27

state 6

    (5) expression -> WHILE . expression LOOP expression POOL
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 29

state 7

    (6) expression -> IF . expression THEN expression ELSE expression FI
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 30

state 8

    (7) expression -> OBJECTID . ( expressions )
    (8) expression -> OBJECTID . ( )
    (24) expression -> OBJECTID . ASSIGN expression
    (               shift and go to state 31
    ASSIGN          shift and go to state 32


state 9

    (16) expression -> ( . expression )
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 33

state 10

    (13) expression -> ~ . expression )
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 34

state 11

    (14) expression -> ISVOID . expression )
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 35

state 12

    (15) expression -> NOT . expression )
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 36

state 13

    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    OBJECTID        shift and go to state 37


state 14

    (11) expression -> expression @ . TYPEID . OBJECTID ( expressions )
    (12) expression -> expression @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 38


state 15

    (17) expression -> expression = . expression
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 39

state 16

    (18) expression -> expression <= . expression
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 40

state 17

    (19) expression -> expression < . expression
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 41

state 18

    (20) expression -> expression / . expression
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 42

state 19

    (21) expression -> expression * . expression
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 43

state 20

    (22) expression -> expression - . expression
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 44

state 21

    (23) expression -> expression + . expression
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 45

state 22

    (1) expression -> { expressions . }
    (33) expressions -> expressions . expression ;
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    }               shift and go to state 46
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 47

state 23

    (34) expressions -> expression . ;
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    ;               shift and go to state 48
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 24

    (2) expression -> NEW TYPEID .
    .               reduce using rule 2 (expression -> NEW TYPEID .)
    @               reduce using rule 2 (expression -> NEW TYPEID .)
    =               reduce using rule 2 (expression -> NEW TYPEID .)
    <=              reduce using rule 2 (expression -> NEW TYPEID .)
    <               reduce using rule 2 (expression -> NEW TYPEID .)
    /               reduce using rule 2 (expression -> NEW TYPEID .)
    *               reduce using rule 2 (expression -> NEW TYPEID .)
    -               reduce using rule 2 (expression -> NEW TYPEID .)
    +               reduce using rule 2 (expression -> NEW TYPEID .)
    $end            reduce using rule 2 (expression -> NEW TYPEID .)
    ;               reduce using rule 2 (expression -> NEW TYPEID .)
    OF              reduce using rule 2 (expression -> NEW TYPEID .)
    LOOP            reduce using rule 2 (expression -> NEW TYPEID .)
    THEN            reduce using rule 2 (expression -> NEW TYPEID .)
    )               reduce using rule 2 (expression -> NEW TYPEID .)
    POOL            reduce using rule 2 (expression -> NEW TYPEID .)
    ELSE            reduce using rule 2 (expression -> NEW TYPEID .)
    ,               reduce using rule 2 (expression -> NEW TYPEID .)
    IN              reduce using rule 2 (expression -> NEW TYPEID .)
    OBJECTID        reduce using rule 2 (expression -> NEW TYPEID .)
    FI              reduce using rule 2 (expression -> NEW TYPEID .)


state 25

    (3) expression -> CASE expression . OF casos ; ESAC
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    OF              shift and go to state 49
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 26

    (4) expression -> LET variables . IN expressions
    (29) variables -> variables . OBJECTID : TYPEID asignacion
    (30) variables -> variables . OBJECTID : TYPEID
    IN              shift and go to state 50
    OBJECTID        shift and go to state 51


state 27

    (28) variables -> variable . ,
    ,               shift and go to state 52


state 28

    (26) variable -> OBJECTID . : TYPEID asignacion
    (27) variable -> OBJECTID . : TYPEID
    :               shift and go to state 53


state 29

    (5) expression -> WHILE expression . LOOP expression POOL
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    LOOP            shift and go to state 54
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 30

    (6) expression -> IF expression . THEN expression ELSE expression FI
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    THEN            shift and go to state 55
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 31

    (7) expression -> OBJECTID ( . expressions )
    (8) expression -> OBJECTID ( . )
    (33) expressions -> . expressions expression ;
    (34) expressions -> . expression ;
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 57
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expressions                    shift and go to state 56
    expression                     shift and go to state 23

state 32

    (24) expression -> OBJECTID ASSIGN . expression
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 58

state 33

    (16) expression -> ( expression . )
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    )               shift and go to state 59
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 34

    (13) expression -> ~ expression . )
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    )               shift and go to state 60
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 35

    (14) expression -> ISVOID expression . )
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    )               shift and go to state 61
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 36

    (15) expression -> NOT expression . )
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    )               shift and go to state 62
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 37

    (9) expression -> expression . OBJECTID . ( expressions )
    (10) expression -> expression . OBJECTID . ( )
    (               shift and go to state 63


state 38

    (11) expression -> expression @ TYPEID . . OBJECTID ( expressions )
    (12) expression -> expression @ TYPEID . . OBJECTID ( )
    .               shift and go to state 64


state 39

    (17) expression -> expression = expression .
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for <= resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 17 (expression -> expression = expression .)
    ;               reduce using rule 17 (expression -> expression = expression .)
    OF              reduce using rule 17 (expression -> expression = expression .)
    LOOP            reduce using rule 17 (expression -> expression = expression .)
    THEN            reduce using rule 17 (expression -> expression = expression .)
    )               reduce using rule 17 (expression -> expression = expression .)
    POOL            reduce using rule 17 (expression -> expression = expression .)
    ELSE            reduce using rule 17 (expression -> expression = expression .)
    ,               reduce using rule 17 (expression -> expression = expression .)
    IN              reduce using rule 17 (expression -> expression = expression .)
    OBJECTID        reduce using rule 17 (expression -> expression = expression .)
    FI              reduce using rule 17 (expression -> expression = expression .)
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 40

    (18) expression -> expression <= expression .
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for <= resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 18 (expression -> expression <= expression .)
    ;               reduce using rule 18 (expression -> expression <= expression .)
    OF              reduce using rule 18 (expression -> expression <= expression .)
    LOOP            reduce using rule 18 (expression -> expression <= expression .)
    THEN            reduce using rule 18 (expression -> expression <= expression .)
    )               reduce using rule 18 (expression -> expression <= expression .)
    POOL            reduce using rule 18 (expression -> expression <= expression .)
    ELSE            reduce using rule 18 (expression -> expression <= expression .)
    ,               reduce using rule 18 (expression -> expression <= expression .)
    IN              reduce using rule 18 (expression -> expression <= expression .)
    OBJECTID        reduce using rule 18 (expression -> expression <= expression .)
    FI              reduce using rule 18 (expression -> expression <= expression .)
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 41

    (19) expression -> expression < expression .
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for <= resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 19 (expression -> expression < expression .)
    ;               reduce using rule 19 (expression -> expression < expression .)
    OF              reduce using rule 19 (expression -> expression < expression .)
    LOOP            reduce using rule 19 (expression -> expression < expression .)
    THEN            reduce using rule 19 (expression -> expression < expression .)
    )               reduce using rule 19 (expression -> expression < expression .)
    POOL            reduce using rule 19 (expression -> expression < expression .)
    ELSE            reduce using rule 19 (expression -> expression < expression .)
    ,               reduce using rule 19 (expression -> expression < expression .)
    IN              reduce using rule 19 (expression -> expression < expression .)
    OBJECTID        reduce using rule 19 (expression -> expression < expression .)
    FI              reduce using rule 19 (expression -> expression < expression .)
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 42

    (20) expression -> expression / expression .
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for <= resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 20 (expression -> expression / expression .)
    ;               reduce using rule 20 (expression -> expression / expression .)
    OF              reduce using rule 20 (expression -> expression / expression .)
    LOOP            reduce using rule 20 (expression -> expression / expression .)
    THEN            reduce using rule 20 (expression -> expression / expression .)
    )               reduce using rule 20 (expression -> expression / expression .)
    POOL            reduce using rule 20 (expression -> expression / expression .)
    ELSE            reduce using rule 20 (expression -> expression / expression .)
    ,               reduce using rule 20 (expression -> expression / expression .)
    IN              reduce using rule 20 (expression -> expression / expression .)
    OBJECTID        reduce using rule 20 (expression -> expression / expression .)
    FI              reduce using rule 20 (expression -> expression / expression .)
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 43

    (21) expression -> expression * expression .
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for <= resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 21 (expression -> expression * expression .)
    ;               reduce using rule 21 (expression -> expression * expression .)
    OF              reduce using rule 21 (expression -> expression * expression .)
    LOOP            reduce using rule 21 (expression -> expression * expression .)
    THEN            reduce using rule 21 (expression -> expression * expression .)
    )               reduce using rule 21 (expression -> expression * expression .)
    POOL            reduce using rule 21 (expression -> expression * expression .)
    ELSE            reduce using rule 21 (expression -> expression * expression .)
    ,               reduce using rule 21 (expression -> expression * expression .)
    IN              reduce using rule 21 (expression -> expression * expression .)
    OBJECTID        reduce using rule 21 (expression -> expression * expression .)
    FI              reduce using rule 21 (expression -> expression * expression .)
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 44

    (22) expression -> expression - expression .
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for <= resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 22 (expression -> expression - expression .)
    ;               reduce using rule 22 (expression -> expression - expression .)
    OF              reduce using rule 22 (expression -> expression - expression .)
    LOOP            reduce using rule 22 (expression -> expression - expression .)
    THEN            reduce using rule 22 (expression -> expression - expression .)
    )               reduce using rule 22 (expression -> expression - expression .)
    POOL            reduce using rule 22 (expression -> expression - expression .)
    ELSE            reduce using rule 22 (expression -> expression - expression .)
    ,               reduce using rule 22 (expression -> expression - expression .)
    IN              reduce using rule 22 (expression -> expression - expression .)
    OBJECTID        reduce using rule 22 (expression -> expression - expression .)
    FI              reduce using rule 22 (expression -> expression - expression .)
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 45

    (23) expression -> expression + expression .
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for <= resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 23 (expression -> expression + expression .)
    ;               reduce using rule 23 (expression -> expression + expression .)
    OF              reduce using rule 23 (expression -> expression + expression .)
    LOOP            reduce using rule 23 (expression -> expression + expression .)
    THEN            reduce using rule 23 (expression -> expression + expression .)
    )               reduce using rule 23 (expression -> expression + expression .)
    POOL            reduce using rule 23 (expression -> expression + expression .)
    ELSE            reduce using rule 23 (expression -> expression + expression .)
    ,               reduce using rule 23 (expression -> expression + expression .)
    IN              reduce using rule 23 (expression -> expression + expression .)
    OBJECTID        reduce using rule 23 (expression -> expression + expression .)
    FI              reduce using rule 23 (expression -> expression + expression .)
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 46

    (1) expression -> { expressions } .
    .               reduce using rule 1 (expression -> { expressions } .)
    @               reduce using rule 1 (expression -> { expressions } .)
    =               reduce using rule 1 (expression -> { expressions } .)
    <=              reduce using rule 1 (expression -> { expressions } .)
    <               reduce using rule 1 (expression -> { expressions } .)
    /               reduce using rule 1 (expression -> { expressions } .)
    *               reduce using rule 1 (expression -> { expressions } .)
    -               reduce using rule 1 (expression -> { expressions } .)
    +               reduce using rule 1 (expression -> { expressions } .)
    $end            reduce using rule 1 (expression -> { expressions } .)
    ;               reduce using rule 1 (expression -> { expressions } .)
    OF              reduce using rule 1 (expression -> { expressions } .)
    LOOP            reduce using rule 1 (expression -> { expressions } .)
    THEN            reduce using rule 1 (expression -> { expressions } .)
    )               reduce using rule 1 (expression -> { expressions } .)
    POOL            reduce using rule 1 (expression -> { expressions } .)
    ELSE            reduce using rule 1 (expression -> { expressions } .)
    ,               reduce using rule 1 (expression -> { expressions } .)
    IN              reduce using rule 1 (expression -> { expressions } .)
    OBJECTID        reduce using rule 1 (expression -> { expressions } .)
    FI              reduce using rule 1 (expression -> { expressions } .)


state 47

    (33) expressions -> expressions expression . ;
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    ;               shift and go to state 65
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 48

    (34) expressions -> expression ; .
    }               reduce using rule 34 (expressions -> expression ; .)
    {               reduce using rule 34 (expressions -> expression ; .)
    NEW             reduce using rule 34 (expressions -> expression ; .)
    CASE            reduce using rule 34 (expressions -> expression ; .)
    LET             reduce using rule 34 (expressions -> expression ; .)
    WHILE           reduce using rule 34 (expressions -> expression ; .)
    IF              reduce using rule 34 (expressions -> expression ; .)
    OBJECTID        reduce using rule 34 (expressions -> expression ; .)
    ~               reduce using rule 34 (expressions -> expression ; .)
    ISVOID          reduce using rule 34 (expressions -> expression ; .)
    NOT             reduce using rule 34 (expressions -> expression ; .)
    (               reduce using rule 34 (expressions -> expression ; .)
    )               reduce using rule 34 (expressions -> expression ; .)
    .               reduce using rule 34 (expressions -> expression ; .)
    @               reduce using rule 34 (expressions -> expression ; .)
    =               reduce using rule 34 (expressions -> expression ; .)
    <=              reduce using rule 34 (expressions -> expression ; .)
    <               reduce using rule 34 (expressions -> expression ; .)
    /               reduce using rule 34 (expressions -> expression ; .)
    *               reduce using rule 34 (expressions -> expression ; .)
    -               reduce using rule 34 (expressions -> expression ; .)
    +               reduce using rule 34 (expressions -> expression ; .)
    $end            reduce using rule 34 (expressions -> expression ; .)
    ;               reduce using rule 34 (expressions -> expression ; .)
    OF              reduce using rule 34 (expressions -> expression ; .)
    LOOP            reduce using rule 34 (expressions -> expression ; .)
    THEN            reduce using rule 34 (expressions -> expression ; .)
    POOL            reduce using rule 34 (expressions -> expression ; .)
    ELSE            reduce using rule 34 (expressions -> expression ; .)
    ,               reduce using rule 34 (expressions -> expression ; .)
    IN              reduce using rule 34 (expressions -> expression ; .)
    FI              reduce using rule 34 (expressions -> expression ; .)


state 49

    (3) expression -> CASE expression OF . casos ; ESAC
    (31) casos -> . casos OBJECTID : TYPEID DARROW expression
    (32) casos -> . OBJECTID : TYPEID DARROW expression
    OBJECTID        shift and go to state 67

    casos                          shift and go to state 66

state 50

    (4) expression -> LET variables IN . expressions
    (33) expressions -> . expressions expression ;
    (34) expressions -> . expression ;
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expressions                    shift and go to state 68
    expression                     shift and go to state 23

state 51

    (29) variables -> variables OBJECTID . : TYPEID asignacion
    (30) variables -> variables OBJECTID . : TYPEID
    :               shift and go to state 69


state 52

    (28) variables -> variable , .
    IN              reduce using rule 28 (variables -> variable , .)
    OBJECTID        reduce using rule 28 (variables -> variable , .)


state 53

    (26) variable -> OBJECTID : . TYPEID asignacion
    (27) variable -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 70


state 54

    (5) expression -> WHILE expression LOOP . expression POOL
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 71

state 55

    (6) expression -> IF expression THEN . expression ELSE expression FI
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 72

state 56

    (7) expression -> OBJECTID ( expressions . )
    (33) expressions -> expressions . expression ;
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 73
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 47

state 57

    (8) expression -> OBJECTID ( ) .
    .               reduce using rule 8 (expression -> OBJECTID ( ) .)
    @               reduce using rule 8 (expression -> OBJECTID ( ) .)
    =               reduce using rule 8 (expression -> OBJECTID ( ) .)
    <=              reduce using rule 8 (expression -> OBJECTID ( ) .)
    <               reduce using rule 8 (expression -> OBJECTID ( ) .)
    /               reduce using rule 8 (expression -> OBJECTID ( ) .)
    *               reduce using rule 8 (expression -> OBJECTID ( ) .)
    -               reduce using rule 8 (expression -> OBJECTID ( ) .)
    +               reduce using rule 8 (expression -> OBJECTID ( ) .)
    $end            reduce using rule 8 (expression -> OBJECTID ( ) .)
    ;               reduce using rule 8 (expression -> OBJECTID ( ) .)
    OF              reduce using rule 8 (expression -> OBJECTID ( ) .)
    LOOP            reduce using rule 8 (expression -> OBJECTID ( ) .)
    THEN            reduce using rule 8 (expression -> OBJECTID ( ) .)
    )               reduce using rule 8 (expression -> OBJECTID ( ) .)
    POOL            reduce using rule 8 (expression -> OBJECTID ( ) .)
    ELSE            reduce using rule 8 (expression -> OBJECTID ( ) .)
    ,               reduce using rule 8 (expression -> OBJECTID ( ) .)
    IN              reduce using rule 8 (expression -> OBJECTID ( ) .)
    OBJECTID        reduce using rule 8 (expression -> OBJECTID ( ) .)
    FI              reduce using rule 8 (expression -> OBJECTID ( ) .)


state 58

    (24) expression -> OBJECTID ASSIGN expression .
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for <= resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    $end            reduce using rule 24 (expression -> OBJECTID ASSIGN expression .)
    ;               reduce using rule 24 (expression -> OBJECTID ASSIGN expression .)
    OF              reduce using rule 24 (expression -> OBJECTID ASSIGN expression .)
    LOOP            reduce using rule 24 (expression -> OBJECTID ASSIGN expression .)
    THEN            reduce using rule 24 (expression -> OBJECTID ASSIGN expression .)
    )               reduce using rule 24 (expression -> OBJECTID ASSIGN expression .)
    POOL            reduce using rule 24 (expression -> OBJECTID ASSIGN expression .)
    ELSE            reduce using rule 24 (expression -> OBJECTID ASSIGN expression .)
    ,               reduce using rule 24 (expression -> OBJECTID ASSIGN expression .)
    IN              reduce using rule 24 (expression -> OBJECTID ASSIGN expression .)
    OBJECTID        reduce using rule 24 (expression -> OBJECTID ASSIGN expression .)
    FI              reduce using rule 24 (expression -> OBJECTID ASSIGN expression .)
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 59

    (16) expression -> ( expression ) .
    .               reduce using rule 16 (expression -> ( expression ) .)
    @               reduce using rule 16 (expression -> ( expression ) .)
    =               reduce using rule 16 (expression -> ( expression ) .)
    <=              reduce using rule 16 (expression -> ( expression ) .)
    <               reduce using rule 16 (expression -> ( expression ) .)
    /               reduce using rule 16 (expression -> ( expression ) .)
    *               reduce using rule 16 (expression -> ( expression ) .)
    -               reduce using rule 16 (expression -> ( expression ) .)
    +               reduce using rule 16 (expression -> ( expression ) .)
    $end            reduce using rule 16 (expression -> ( expression ) .)
    ;               reduce using rule 16 (expression -> ( expression ) .)
    OF              reduce using rule 16 (expression -> ( expression ) .)
    LOOP            reduce using rule 16 (expression -> ( expression ) .)
    THEN            reduce using rule 16 (expression -> ( expression ) .)
    )               reduce using rule 16 (expression -> ( expression ) .)
    POOL            reduce using rule 16 (expression -> ( expression ) .)
    ELSE            reduce using rule 16 (expression -> ( expression ) .)
    ,               reduce using rule 16 (expression -> ( expression ) .)
    IN              reduce using rule 16 (expression -> ( expression ) .)
    OBJECTID        reduce using rule 16 (expression -> ( expression ) .)
    FI              reduce using rule 16 (expression -> ( expression ) .)


state 60

    (13) expression -> ~ expression ) .
    .               reduce using rule 13 (expression -> ~ expression ) .)
    @               reduce using rule 13 (expression -> ~ expression ) .)
    =               reduce using rule 13 (expression -> ~ expression ) .)
    <=              reduce using rule 13 (expression -> ~ expression ) .)
    <               reduce using rule 13 (expression -> ~ expression ) .)
    /               reduce using rule 13 (expression -> ~ expression ) .)
    *               reduce using rule 13 (expression -> ~ expression ) .)
    -               reduce using rule 13 (expression -> ~ expression ) .)
    +               reduce using rule 13 (expression -> ~ expression ) .)
    $end            reduce using rule 13 (expression -> ~ expression ) .)
    ;               reduce using rule 13 (expression -> ~ expression ) .)
    OF              reduce using rule 13 (expression -> ~ expression ) .)
    LOOP            reduce using rule 13 (expression -> ~ expression ) .)
    THEN            reduce using rule 13 (expression -> ~ expression ) .)
    )               reduce using rule 13 (expression -> ~ expression ) .)
    POOL            reduce using rule 13 (expression -> ~ expression ) .)
    ELSE            reduce using rule 13 (expression -> ~ expression ) .)
    ,               reduce using rule 13 (expression -> ~ expression ) .)
    IN              reduce using rule 13 (expression -> ~ expression ) .)
    OBJECTID        reduce using rule 13 (expression -> ~ expression ) .)
    FI              reduce using rule 13 (expression -> ~ expression ) .)


state 61

    (14) expression -> ISVOID expression ) .
    .               reduce using rule 14 (expression -> ISVOID expression ) .)
    @               reduce using rule 14 (expression -> ISVOID expression ) .)
    =               reduce using rule 14 (expression -> ISVOID expression ) .)
    <=              reduce using rule 14 (expression -> ISVOID expression ) .)
    <               reduce using rule 14 (expression -> ISVOID expression ) .)
    /               reduce using rule 14 (expression -> ISVOID expression ) .)
    *               reduce using rule 14 (expression -> ISVOID expression ) .)
    -               reduce using rule 14 (expression -> ISVOID expression ) .)
    +               reduce using rule 14 (expression -> ISVOID expression ) .)
    $end            reduce using rule 14 (expression -> ISVOID expression ) .)
    ;               reduce using rule 14 (expression -> ISVOID expression ) .)
    OF              reduce using rule 14 (expression -> ISVOID expression ) .)
    LOOP            reduce using rule 14 (expression -> ISVOID expression ) .)
    THEN            reduce using rule 14 (expression -> ISVOID expression ) .)
    )               reduce using rule 14 (expression -> ISVOID expression ) .)
    POOL            reduce using rule 14 (expression -> ISVOID expression ) .)
    ELSE            reduce using rule 14 (expression -> ISVOID expression ) .)
    ,               reduce using rule 14 (expression -> ISVOID expression ) .)
    IN              reduce using rule 14 (expression -> ISVOID expression ) .)
    OBJECTID        reduce using rule 14 (expression -> ISVOID expression ) .)
    FI              reduce using rule 14 (expression -> ISVOID expression ) .)


state 62

    (15) expression -> NOT expression ) .
    .               reduce using rule 15 (expression -> NOT expression ) .)
    @               reduce using rule 15 (expression -> NOT expression ) .)
    =               reduce using rule 15 (expression -> NOT expression ) .)
    <=              reduce using rule 15 (expression -> NOT expression ) .)
    <               reduce using rule 15 (expression -> NOT expression ) .)
    /               reduce using rule 15 (expression -> NOT expression ) .)
    *               reduce using rule 15 (expression -> NOT expression ) .)
    -               reduce using rule 15 (expression -> NOT expression ) .)
    +               reduce using rule 15 (expression -> NOT expression ) .)
    $end            reduce using rule 15 (expression -> NOT expression ) .)
    ;               reduce using rule 15 (expression -> NOT expression ) .)
    OF              reduce using rule 15 (expression -> NOT expression ) .)
    LOOP            reduce using rule 15 (expression -> NOT expression ) .)
    THEN            reduce using rule 15 (expression -> NOT expression ) .)
    )               reduce using rule 15 (expression -> NOT expression ) .)
    POOL            reduce using rule 15 (expression -> NOT expression ) .)
    ELSE            reduce using rule 15 (expression -> NOT expression ) .)
    ,               reduce using rule 15 (expression -> NOT expression ) .)
    IN              reduce using rule 15 (expression -> NOT expression ) .)
    OBJECTID        reduce using rule 15 (expression -> NOT expression ) .)
    FI              reduce using rule 15 (expression -> NOT expression ) .)


state 63

    (9) expression -> expression . OBJECTID ( . expressions )
    (10) expression -> expression . OBJECTID ( . )
    (33) expressions -> . expressions expression ;
    (34) expressions -> . expression ;
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 75
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 23
    expressions                    shift and go to state 74

state 64

    (11) expression -> expression @ TYPEID . . OBJECTID ( expressions )
    (12) expression -> expression @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 76


state 65

    (33) expressions -> expressions expression ; .
    }               reduce using rule 33 (expressions -> expressions expression ; .)
    {               reduce using rule 33 (expressions -> expressions expression ; .)
    NEW             reduce using rule 33 (expressions -> expressions expression ; .)
    CASE            reduce using rule 33 (expressions -> expressions expression ; .)
    LET             reduce using rule 33 (expressions -> expressions expression ; .)
    WHILE           reduce using rule 33 (expressions -> expressions expression ; .)
    IF              reduce using rule 33 (expressions -> expressions expression ; .)
    OBJECTID        reduce using rule 33 (expressions -> expressions expression ; .)
    ~               reduce using rule 33 (expressions -> expressions expression ; .)
    ISVOID          reduce using rule 33 (expressions -> expressions expression ; .)
    NOT             reduce using rule 33 (expressions -> expressions expression ; .)
    (               reduce using rule 33 (expressions -> expressions expression ; .)
    )               reduce using rule 33 (expressions -> expressions expression ; .)
    .               reduce using rule 33 (expressions -> expressions expression ; .)
    @               reduce using rule 33 (expressions -> expressions expression ; .)
    =               reduce using rule 33 (expressions -> expressions expression ; .)
    <=              reduce using rule 33 (expressions -> expressions expression ; .)
    <               reduce using rule 33 (expressions -> expressions expression ; .)
    /               reduce using rule 33 (expressions -> expressions expression ; .)
    *               reduce using rule 33 (expressions -> expressions expression ; .)
    -               reduce using rule 33 (expressions -> expressions expression ; .)
    +               reduce using rule 33 (expressions -> expressions expression ; .)
    $end            reduce using rule 33 (expressions -> expressions expression ; .)
    ;               reduce using rule 33 (expressions -> expressions expression ; .)
    OF              reduce using rule 33 (expressions -> expressions expression ; .)
    LOOP            reduce using rule 33 (expressions -> expressions expression ; .)
    THEN            reduce using rule 33 (expressions -> expressions expression ; .)
    POOL            reduce using rule 33 (expressions -> expressions expression ; .)
    ELSE            reduce using rule 33 (expressions -> expressions expression ; .)
    ,               reduce using rule 33 (expressions -> expressions expression ; .)
    IN              reduce using rule 33 (expressions -> expressions expression ; .)
    FI              reduce using rule 33 (expressions -> expressions expression ; .)


state 66

    (3) expression -> CASE expression OF casos . ; ESAC
    (31) casos -> casos . OBJECTID : TYPEID DARROW expression
    ;               shift and go to state 77
    OBJECTID        shift and go to state 78


state 67

    (32) casos -> OBJECTID . : TYPEID DARROW expression
    :               shift and go to state 79


state 68

    (4) expression -> LET variables IN expressions .
    (33) expressions -> expressions . expression ;
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
  ! shift/reduce conflict for OBJECTID resolved as shift
    .               reduce using rule 4 (expression -> LET variables IN expressions .)
    @               reduce using rule 4 (expression -> LET variables IN expressions .)
    =               reduce using rule 4 (expression -> LET variables IN expressions .)
    <=              reduce using rule 4 (expression -> LET variables IN expressions .)
    <               reduce using rule 4 (expression -> LET variables IN expressions .)
    /               reduce using rule 4 (expression -> LET variables IN expressions .)
    *               reduce using rule 4 (expression -> LET variables IN expressions .)
    -               reduce using rule 4 (expression -> LET variables IN expressions .)
    +               reduce using rule 4 (expression -> LET variables IN expressions .)
    $end            reduce using rule 4 (expression -> LET variables IN expressions .)
    ;               reduce using rule 4 (expression -> LET variables IN expressions .)
    OF              reduce using rule 4 (expression -> LET variables IN expressions .)
    LOOP            reduce using rule 4 (expression -> LET variables IN expressions .)
    THEN            reduce using rule 4 (expression -> LET variables IN expressions .)
    )               reduce using rule 4 (expression -> LET variables IN expressions .)
    POOL            reduce using rule 4 (expression -> LET variables IN expressions .)
    ELSE            reduce using rule 4 (expression -> LET variables IN expressions .)
    ,               reduce using rule 4 (expression -> LET variables IN expressions .)
    IN              reduce using rule 4 (expression -> LET variables IN expressions .)
    FI              reduce using rule 4 (expression -> LET variables IN expressions .)
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 47

state 69

    (29) variables -> variables OBJECTID : . TYPEID asignacion
    (30) variables -> variables OBJECTID : . TYPEID
    TYPEID          shift and go to state 80


state 70

    (26) variable -> OBJECTID : TYPEID . asignacion
    (27) variable -> OBJECTID : TYPEID .
    (25) asignacion -> . ASSIGN expression
    ,               reduce using rule 27 (variable -> OBJECTID : TYPEID .)
    ASSIGN          shift and go to state 82

    asignacion                     shift and go to state 81

state 71

    (5) expression -> WHILE expression LOOP expression . POOL
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    POOL            shift and go to state 83
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 72

    (6) expression -> IF expression THEN expression . ELSE expression FI
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    ELSE            shift and go to state 84
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 73

    (7) expression -> OBJECTID ( expressions ) .
    .               reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    @               reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    =               reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    <=              reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    <               reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    /               reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    *               reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    -               reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    +               reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    $end            reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    ;               reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    OF              reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    LOOP            reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    THEN            reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    )               reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    POOL            reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    ELSE            reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    ,               reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    IN              reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    OBJECTID        reduce using rule 7 (expression -> OBJECTID ( expressions ) .)
    FI              reduce using rule 7 (expression -> OBJECTID ( expressions ) .)


state 74

    (9) expression -> expression . OBJECTID ( expressions . )
    (33) expressions -> expressions . expression ;
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 85
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 47

state 75

    (10) expression -> expression . OBJECTID ( ) .
    .               reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    @               reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    =               reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    <=              reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    <               reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    /               reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    *               reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    -               reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    +               reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    $end            reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    ;               reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    OF              reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    LOOP            reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    THEN            reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    )               reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    POOL            reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    ELSE            reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    ,               reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    IN              reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    OBJECTID        reduce using rule 10 (expression -> expression . OBJECTID ( ) .)
    FI              reduce using rule 10 (expression -> expression . OBJECTID ( ) .)


state 76

    (11) expression -> expression @ TYPEID . OBJECTID . ( expressions )
    (12) expression -> expression @ TYPEID . OBJECTID . ( )
    (               shift and go to state 86


state 77

    (3) expression -> CASE expression OF casos ; . ESAC
    ESAC            shift and go to state 87


state 78

    (31) casos -> casos OBJECTID . : TYPEID DARROW expression
    :               shift and go to state 88


state 79

    (32) casos -> OBJECTID : . TYPEID DARROW expression
    TYPEID          shift and go to state 89


state 80

    (29) variables -> variables OBJECTID : TYPEID . asignacion
    (30) variables -> variables OBJECTID : TYPEID .
    (25) asignacion -> . ASSIGN expression
    IN              reduce using rule 30 (variables -> variables OBJECTID : TYPEID .)
    OBJECTID        reduce using rule 30 (variables -> variables OBJECTID : TYPEID .)
    ASSIGN          shift and go to state 82

    asignacion                     shift and go to state 90

state 81

    (26) variable -> OBJECTID : TYPEID asignacion .
    ,               reduce using rule 26 (variable -> OBJECTID : TYPEID asignacion .)


state 82

    (25) asignacion -> ASSIGN . expression
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 91

state 83

    (5) expression -> WHILE expression LOOP expression POOL .
    .               reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    @               reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    =               reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    <=              reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    <               reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    /               reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    *               reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    -               reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    +               reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    $end            reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    ;               reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    OF              reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    LOOP            reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    THEN            reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    )               reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    POOL            reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    ELSE            reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    ,               reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    IN              reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    OBJECTID        reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)
    FI              reduce using rule 5 (expression -> WHILE expression LOOP expression POOL .)


state 84

    (6) expression -> IF expression THEN expression ELSE . expression FI
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 92

state 85

    (9) expression -> expression . OBJECTID ( expressions ) .
    .               reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    @               reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    =               reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    <=              reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    <               reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    /               reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    *               reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    -               reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    +               reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    $end            reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    ;               reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    OF              reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    LOOP            reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    THEN            reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    )               reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    POOL            reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    ELSE            reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    ,               reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    IN              reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    OBJECTID        reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)
    FI              reduce using rule 9 (expression -> expression . OBJECTID ( expressions ) .)


state 86

    (11) expression -> expression @ TYPEID . OBJECTID ( . expressions )
    (12) expression -> expression @ TYPEID . OBJECTID ( . )
    (33) expressions -> . expressions expression ;
    (34) expressions -> . expression ;
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 94
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 23
    expressions                    shift and go to state 93

state 87

    (3) expression -> CASE expression OF casos ; ESAC .
    .               reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    @               reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    =               reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    <=              reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    <               reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    /               reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    *               reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    -               reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    +               reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    $end            reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    ;               reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    OF              reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    LOOP            reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    THEN            reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    )               reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    POOL            reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    ELSE            reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    ,               reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    IN              reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    OBJECTID        reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)
    FI              reduce using rule 3 (expression -> CASE expression OF casos ; ESAC .)


state 88

    (31) casos -> casos OBJECTID : . TYPEID DARROW expression
    TYPEID          shift and go to state 95


state 89

    (32) casos -> OBJECTID : TYPEID . DARROW expression
    DARROW          shift and go to state 96


state 90

    (29) variables -> variables OBJECTID : TYPEID asignacion .
    IN              reduce using rule 29 (variables -> variables OBJECTID : TYPEID asignacion .)
    OBJECTID        reduce using rule 29 (variables -> variables OBJECTID : TYPEID asignacion .)


state 91

    (25) asignacion -> ASSIGN expression .
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    ,               reduce using rule 25 (asignacion -> ASSIGN expression .)
    IN              reduce using rule 25 (asignacion -> ASSIGN expression .)
    OBJECTID        reduce using rule 25 (asignacion -> ASSIGN expression .)
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 92

    (6) expression -> IF expression THEN expression ELSE expression . FI
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    FI              shift and go to state 97
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 93

    (11) expression -> expression @ TYPEID . OBJECTID ( expressions . )
    (33) expressions -> expressions . expression ;
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    )               shift and go to state 98
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 47

state 94

    (12) expression -> expression @ TYPEID . OBJECTID ( ) .
    .               reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    <=              reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    $end            reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    OBJECTID        reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 12 (expression -> expression @ TYPEID . OBJECTID ( ) .)


state 95

    (31) casos -> casos OBJECTID : TYPEID . DARROW expression
    DARROW          shift and go to state 99


state 96

    (32) casos -> OBJECTID : TYPEID DARROW . expression
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 100

state 97

    (6) expression -> IF expression THEN expression ELSE expression FI .
    .               reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    @               reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    =               reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    <=              reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    <               reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    /               reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    *               reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    -               reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    +               reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    $end            reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    ;               reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    OF              reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    LOOP            reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    THEN            reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    )               reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    POOL            reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    ELSE            reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    ,               reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    IN              reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    OBJECTID        reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)
    FI              reduce using rule 6 (expression -> IF expression THEN expression ELSE expression FI .)


state 98

    (11) expression -> expression @ TYPEID . OBJECTID ( expressions ) .
    .               reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    @               reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    =               reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    <=              reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    <               reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    /               reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    *               reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    -               reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    +               reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    $end            reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    ;               reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    OF              reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    LOOP            reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    THEN            reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    )               reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    POOL            reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    ELSE            reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    ,               reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    IN              reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    OBJECTID        reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)
    FI              reduce using rule 11 (expression -> expression @ TYPEID . OBJECTID ( expressions ) .)


state 99

    (31) casos -> casos OBJECTID : TYPEID DARROW . expression
    (1) expression -> . { expressions }
    (2) expression -> . NEW TYPEID
    (3) expression -> . CASE expression OF casos ; ESAC
    (4) expression -> . LET variables IN expressions
    (5) expression -> . WHILE expression LOOP expression POOL
    (6) expression -> . IF expression THEN expression ELSE expression FI
    (7) expression -> . OBJECTID ( expressions )
    (8) expression -> . OBJECTID ( )
    (9) expression -> . expression . OBJECTID ( expressions )
    (10) expression -> . expression . OBJECTID ( )
    (11) expression -> . expression @ TYPEID . OBJECTID ( expressions )
    (12) expression -> . expression @ TYPEID . OBJECTID ( )
    (13) expression -> . ~ expression )
    (14) expression -> . ISVOID expression )
    (15) expression -> . NOT expression )
    (16) expression -> . ( expression )
    (17) expression -> . expression = expression
    (18) expression -> . expression <= expression
    (19) expression -> . expression < expression
    (20) expression -> . expression / expression
    (21) expression -> . expression * expression
    (22) expression -> . expression - expression
    (23) expression -> . expression + expression
    (24) expression -> . OBJECTID ASSIGN expression
    {               shift and go to state 2
    NEW             shift and go to state 3
    CASE            shift and go to state 4
    LET             shift and go to state 5
    WHILE           shift and go to state 6
    IF              shift and go to state 7
    OBJECTID        shift and go to state 8
    ~               shift and go to state 10
    ISVOID          shift and go to state 11
    NOT             shift and go to state 12
    (               shift and go to state 9

    expression                     shift and go to state 101

state 100

    (32) casos -> OBJECTID : TYPEID DARROW expression .
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    ;               reduce using rule 32 (casos -> OBJECTID : TYPEID DARROW expression .)
    OBJECTID        reduce using rule 32 (casos -> OBJECTID : TYPEID DARROW expression .)
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


state 101

    (31) casos -> casos OBJECTID : TYPEID DARROW expression .
    (9) expression -> expression . . OBJECTID ( expressions )
    (10) expression -> expression . . OBJECTID ( )
    (11) expression -> expression . @ TYPEID . OBJECTID ( expressions )
    (12) expression -> expression . @ TYPEID . OBJECTID ( )
    (17) expression -> expression . = expression
    (18) expression -> expression . <= expression
    (19) expression -> expression . < expression
    (20) expression -> expression . / expression
    (21) expression -> expression . * expression
    (22) expression -> expression . - expression
    (23) expression -> expression . + expression
    ;               reduce using rule 31 (casos -> casos OBJECTID : TYPEID DARROW expression .)
    OBJECTID        reduce using rule 31 (casos -> casos OBJECTID : TYPEID DARROW expression .)
    .               shift and go to state 13
    @               shift and go to state 14
    =               shift and go to state 15
    <=              shift and go to state 16
    <               shift and go to state 17
    /               shift and go to state 18
    *               shift and go to state 19
    -               shift and go to state 20
    +               shift and go to state 21


Conflicts:

shift/reduce conflict for . in state 39 resolved as shift
shift/reduce conflict for @ in state 39 resolved as shift
shift/reduce conflict for = in state 39 resolved as shift
shift/reduce conflict for <= in state 39 resolved as shift
shift/reduce conflict for < in state 39 resolved as shift
shift/reduce conflict for / in state 39 resolved as shift
shift/reduce conflict for * in state 39 resolved as shift
shift/reduce conflict for - in state 39 resolved as shift
shift/reduce conflict for + in state 39 resolved as shift
shift/reduce conflict for . in state 40 resolved as shift
shift/reduce conflict for @ in state 40 resolved as shift
shift/reduce conflict for = in state 40 resolved as shift
shift/reduce conflict for <= in state 40 resolved as shift
shift/reduce conflict for < in state 40 resolved as shift
shift/reduce conflict for / in state 40 resolved as shift
shift/reduce conflict for * in state 40 resolved as shift
shift/reduce conflict for - in state 40 resolved as shift
shift/reduce conflict for + in state 40 resolved as shift
shift/reduce conflict for . in state 41 resolved as shift
shift/reduce conflict for @ in state 41 resolved as shift
shift/reduce conflict for = in state 41 resolved as shift
shift/reduce conflict for <= in state 41 resolved as shift
shift/reduce conflict for < in state 41 resolved as shift
shift/reduce conflict for / in state 41 resolved as shift
shift/reduce conflict for * in state 41 resolved as shift
shift/reduce conflict for - in state 41 resolved as shift
shift/reduce conflict for + in state 41 resolved as shift
shift/reduce conflict for . in state 42 resolved as shift
shift/reduce conflict for @ in state 42 resolved as shift
shift/reduce conflict for = in state 42 resolved as shift
shift/reduce conflict for <= in state 42 resolved as shift
shift/reduce conflict for < in state 42 resolved as shift
shift/reduce conflict for / in state 42 resolved as shift
shift/reduce conflict for * in state 42 resolved as shift
shift/reduce conflict for - in state 42 resolved as shift
shift/reduce conflict for + in state 42 resolved as shift
shift/reduce conflict for . in state 43 resolved as shift
shift/reduce conflict for @ in state 43 resolved as shift
shift/reduce conflict for = in state 43 resolved as shift
shift/reduce conflict for <= in state 43 resolved as shift
shift/reduce conflict for < in state 43 resolved as shift
shift/reduce conflict for / in state 43 resolved as shift
shift/reduce conflict for * in state 43 resolved as shift
shift/reduce conflict for - in state 43 resolved as shift
shift/reduce conflict for + in state 43 resolved as shift
shift/reduce conflict for . in state 44 resolved as shift
shift/reduce conflict for @ in state 44 resolved as shift
shift/reduce conflict for = in state 44 resolved as shift
shift/reduce conflict for <= in state 44 resolved as shift
shift/reduce conflict for < in state 44 resolved as shift
shift/reduce conflict for / in state 44 resolved as shift
shift/reduce conflict for * in state 44 resolved as shift
shift/reduce conflict for - in state 44 resolved as shift
shift/reduce conflict for + in state 44 resolved as shift
shift/reduce conflict for . in state 45 resolved as shift
shift/reduce conflict for @ in state 45 resolved as shift
shift/reduce conflict for = in state 45 resolved as shift
shift/reduce conflict for <= in state 45 resolved as shift
shift/reduce conflict for < in state 45 resolved as shift
shift/reduce conflict for / in state 45 resolved as shift
shift/reduce conflict for * in state 45 resolved as shift
shift/reduce conflict for - in state 45 resolved as shift
shift/reduce conflict for + in state 45 resolved as shift
shift/reduce conflict for . in state 58 resolved as shift
shift/reduce conflict for @ in state 58 resolved as shift
shift/reduce conflict for = in state 58 resolved as shift
shift/reduce conflict for <= in state 58 resolved as shift
shift/reduce conflict for < in state 58 resolved as shift
shift/reduce conflict for / in state 58 resolved as shift
shift/reduce conflict for * in state 58 resolved as shift
shift/reduce conflict for - in state 58 resolved as shift
shift/reduce conflict for + in state 58 resolved as shift
shift/reduce conflict for OBJECTID in state 68 resolved as shift